to do before forging on: 

* loading state (non)persistence: 
  * I explicitly blacklist all of my isFetching properties from whatever redux persistence I'm using.
  * Or you can have a 'cancel all network events' action that you dispatch straight after createStore, (which will also fire if you pick up your store from localstorage) which resets all isFetching flags
* data-test => test-id
* terminology: wrapper? dom? other??
* sass up the css, or other distributed css system
* signin and signup have identical tests. Should they be the same component...?
* circleCI continuous integration (tests and linting)
* error handling
  * send errors back to the server to log (middleware to do this...?)
    * server logging in general...?
  * move navlink into clarity directory
* server eslint

Done!
* proptypes
* eslint 
  * semicolons!!
  * make sure all functions have jsdoc
* axios instance / token header
* component loading states
* persist login on refresh
  * be sure to persist axios instance header as well, using token
* error boundaries
* clarity alert component (tdd!)
* call setup.js automatically before every test (or just once before all tests...?)
  * https://github.com/airbnb/enzyme/issues/1265